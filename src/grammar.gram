Program     := stmts=AsgnStmt* _
AsgnStmt    := IfStmt
             | BlockStmt
             | NuairStmt
             | LeStmt
             | AssgnStmt
             | DefnStmt
             | Expr
NonAsgnStmt := IfStmt | NuairStmt | LeStmt | BlockStmt | AssgnStmt | Expr
IfStmt      := _ 'm[áa]' &gap expr=Expr &gap stmt=NonAsgnStmt elsebranch={_ 'n[oó]' &gap stmt=NonAsgnStmt}?
BlockStmt   := _ '{' blk=AsgnStmt* _ '}'
NuairStmt   := _ 'nuair' gap 'a' expr=Expr &gap stmt=NonAsgnStmt
LeStmt      := _ 'le' &gap id=ID _ 'idir' _ '\('strt=Expr _ ',' end=Expr _ '\)' stmt=NonAsgnStmt
DefnStmt    := _ id=ID _ ':=' _ expr=Expr
AssgnStmt   := _ id=ID _ '=' _ expr=Expr
Expr        := And
And         := head=Or tail={_ '\&' trm=Or}*
Or          := head=Eq tail={_ '\|' trm=Eq}*
Eq          := head=Comp tail={_ op='[!=]=' trm=Comp}*
Comp        := head=Sum tail={_ op=Compare trm=Sum}*
Sum         := head=Product tail={_ op=PlusMinus trm=Product}*
Product     := head=PostOp tail={_ op=MulDiv trm=PostOp}*
PostOp      := at=Atom ops={'\(' args=CSArgs? _ '\)'}*
Atom        := Int
             | ID
             | Bool
             | _ '\(' trm=Expr '\)'
CSArgs      := head=Expr tail={_ ',' exp=Expr}*
PlusMinus   := '\+|-'
MulDiv      := '\*|\/|%'
Compare     := '(<=)|(>=)|<|>'
Keyword     := 'm[áa]' | 'n[oó]' | 'nuair\s+a' | 'f[ií]or|breag'
ID          := _ !{Keyword gap} id='[a-zA-Z_áéíóúÁÉÍÓÚ]+'
Bool        := _ bool='f[ií]or|breag'
Int         := _ int='[0-9]+'
_           := '\s*'
gap         := '(^|\s|$)+'
